function e(){return process.env.DEBUG}var t,s,r=require("tty"),n=require("util");exports=module.exports=require("./debug"),exports.init=function(e){var t,s;for(e.inspectOpts={},t=Object.keys(exports.inspectOpts),s=0;s<t.length;s++)e.inspectOpts[t[s]]=exports.inspectOpts[t[s]]},exports.log=function(){return s.write(n.format.apply(n,arguments)+"\n")},exports.formatArgs=function(e){var t,s,r=this.namespace;this.useColors?(s="  [3"+(t=this.color)+";1m"+r+" [0m",e[0]=s+e[0].split("\n").join("\n"+s),e.push("[3"+t+"m+"+exports.humanize(this.diff)+"[0m")):e[0]=(new Date).toUTCString()+" "+r+" "+e[0]},exports.save=function(e){null==e?delete process.env.DEBUG:process.env.DEBUG=e},exports.load=e,exports.useColors=function(){return"colors"in exports.inspectOpts?!!exports.inspectOpts.colors:r.isatty(t)},exports.colors=[6,2,3,4,5,1],exports.inspectOpts=Object.keys(process.env).filter(function(e){return/^debug_/i.test(e)}).reduce(function(e,t){var s=t.substring(6).toLowerCase().replace(/_([a-z])/g,function(e,t){return t.toUpperCase()}),r=process.env[t];return r=!!/^(yes|on|true|enabled)$/i.test(r)||!/^(no|off|false|disabled)$/i.test(r)&&("null"===r?null:+r),e[s]=r,e},{}),1!==(t=parseInt(process.env.DEBUG_FD,10)||2)&&2!==t&&n.deprecate(function(){},"except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)")(),s=1===t?process.stdout:2===t?process.stderr:function(e){var t;switch(process.binding("tty_wrap").guessHandleType(e)){case"TTY":(t=new r.WriteStream(e))._type="tty",t._handle&&t._handle.unref&&t._handle.unref();break;case"FILE":(t=new(require("fs").SyncWriteStream)(e,{autoClose:!1}))._type="fs";break;case"PIPE":case"TCP":(t=new(require("net").Socket)({fd:e,readable:!1,writable:!0})).readable=!1,t.read=null,t._type="pipe",t._handle&&t._handle.unref&&t._handle.unref();break;default:throw Error("Implement me. Unknown stream file type!")}return t.fd=e,t._isStdio=!0,t}(t),exports.formatters.o=function(e){return this.inspectOpts.colors=this.useColors,n.inspect(e,this.inspectOpts).split("\n").map(function(e){return e.trim()}).join(" ")},exports.formatters.O=function(e){return this.inspectOpts.colors=this.useColors,n.inspect(e,this.inspectOpts)},exports.enable(e());